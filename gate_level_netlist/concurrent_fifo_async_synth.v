/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* dynports =  1  *)
(* src = "async_fifo_memory.v:1" *)
module \$paramod\async_fifo_memory\DATA_WIDTH=8\DEPTH=16 (wr_clk, rd_clk, write_data, write_en, write_addr, read_data, read_addr);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  reg [7:0] \memory[0] ;
  reg [7:0] \memory[10] ;
  reg [7:0] \memory[11] ;
  reg [7:0] \memory[12] ;
  reg [7:0] \memory[13] ;
  reg [7:0] \memory[14] ;
  reg [7:0] \memory[15] ;
  reg [7:0] \memory[1] ;
  reg [7:0] \memory[2] ;
  reg [7:0] \memory[3] ;
  reg [7:0] \memory[4] ;
  reg [7:0] \memory[5] ;
  reg [7:0] \memory[6] ;
  reg [7:0] \memory[7] ;
  reg [7:0] \memory[8] ;
  reg [7:0] \memory[9] ;
  (* src = "async_fifo_memory.v:3" *)
  input rd_clk;
  (* src = "async_fifo_memory.v:8" *)
  input [3:0] read_addr;
  (* src = "async_fifo_memory.v:7" *)
  output [7:0] read_data;
  reg [7:0] read_data;
  (* src = "async_fifo_memory.v:2" *)
  input wr_clk;
  (* src = "async_fifo_memory.v:6" *)
  input [3:0] write_addr;
  (* src = "async_fifo_memory.v:4" *)
  input [7:0] write_data;
  (* src = "async_fifo_memory.v:5" *)
  input write_en;
  assign _156_ = read_addr[2] ? _155_ : _152_;
  assign _157_ = read_addr[0] ? \memory[9] [1] : \memory[8] [1];
  assign _158_ = read_addr[0] ? \memory[11] [1] : \memory[10] [1];
  assign _159_ = read_addr[1] ? _158_ : _157_;
  assign _160_ = read_addr[0] ? \memory[13] [1] : \memory[12] [1];
  assign _161_ = read_addr[0] ? \memory[15] [1] : \memory[14] [1];
  assign _162_ = read_addr[1] ? _161_ : _160_;
  assign _163_ = read_addr[2] ? _162_ : _159_;
  assign _001_ = read_addr[3] ? _163_ : _156_;
  assign _164_ = read_addr[0] ? \memory[1] [2] : \memory[0] [2];
  assign _165_ = read_addr[0] ? \memory[3] [2] : \memory[2] [2];
  assign _166_ = read_addr[1] ? _165_ : _164_;
  assign _167_ = read_addr[0] ? \memory[5] [2] : \memory[4] [2];
  assign _168_ = read_addr[0] ? \memory[7] [2] : \memory[6] [2];
  assign _169_ = read_addr[1] ? _168_ : _167_;
  assign _170_ = read_addr[2] ? _169_ : _166_;
  assign _171_ = read_addr[0] ? \memory[9] [2] : \memory[8] [2];
  assign _172_ = read_addr[0] ? \memory[11] [2] : \memory[10] [2];
  assign _173_ = read_addr[1] ? _172_ : _171_;
  assign _174_ = read_addr[0] ? \memory[13] [2] : \memory[12] [2];
  assign _175_ = read_addr[0] ? \memory[15] [2] : \memory[14] [2];
  assign _176_ = read_addr[1] ? _175_ : _174_;
  assign _177_ = read_addr[2] ? _176_ : _173_;
  assign _002_ = read_addr[3] ? _177_ : _170_;
  assign _178_ = read_addr[0] ? \memory[1] [3] : \memory[0] [3];
  assign _179_ = read_addr[0] ? \memory[3] [3] : \memory[2] [3];
  assign _180_ = read_addr[1] ? _179_ : _178_;
  assign _181_ = read_addr[0] ? \memory[5] [3] : \memory[4] [3];
  assign _182_ = read_addr[0] ? \memory[7] [3] : \memory[6] [3];
  assign _183_ = read_addr[1] ? _182_ : _181_;
  assign _184_ = read_addr[2] ? _183_ : _180_;
  assign _185_ = read_addr[0] ? \memory[9] [3] : \memory[8] [3];
  assign _186_ = read_addr[0] ? \memory[11] [3] : \memory[10] [3];
  assign _187_ = read_addr[1] ? _186_ : _185_;
  assign _188_ = read_addr[0] ? \memory[13] [3] : \memory[12] [3];
  assign _189_ = read_addr[0] ? \memory[15] [3] : \memory[14] [3];
  assign _190_ = read_addr[1] ? _189_ : _188_;
  assign _191_ = read_addr[2] ? _190_ : _187_;
  assign _003_ = read_addr[3] ? _191_ : _184_;
  assign _192_ = read_addr[0] ? \memory[1] [4] : \memory[0] [4];
  assign _193_ = read_addr[0] ? \memory[3] [4] : \memory[2] [4];
  assign _194_ = read_addr[1] ? _193_ : _192_;
  assign _195_ = read_addr[0] ? \memory[5] [4] : \memory[4] [4];
  assign _196_ = read_addr[0] ? \memory[7] [4] : \memory[6] [4];
  assign _197_ = read_addr[1] ? _196_ : _195_;
  assign _198_ = read_addr[2] ? _197_ : _194_;
  assign _199_ = read_addr[0] ? \memory[9] [4] : \memory[8] [4];
  assign _200_ = read_addr[0] ? \memory[11] [4] : \memory[10] [4];
  assign _201_ = read_addr[1] ? _200_ : _199_;
  assign _202_ = read_addr[0] ? \memory[13] [4] : \memory[12] [4];
  assign _203_ = read_addr[0] ? \memory[15] [4] : \memory[14] [4];
  assign _204_ = read_addr[1] ? _203_ : _202_;
  assign _205_ = read_addr[2] ? _204_ : _201_;
  assign _004_ = read_addr[3] ? _205_ : _198_;
  assign _206_ = read_addr[0] ? \memory[1] [5] : \memory[0] [5];
  assign _207_ = read_addr[0] ? \memory[3] [5] : \memory[2] [5];
  assign _208_ = read_addr[1] ? _207_ : _206_;
  assign _209_ = read_addr[0] ? \memory[5] [5] : \memory[4] [5];
  assign _210_ = read_addr[0] ? \memory[7] [5] : \memory[6] [5];
  assign _211_ = read_addr[1] ? _210_ : _209_;
  assign _212_ = read_addr[2] ? _211_ : _208_;
  assign _213_ = read_addr[0] ? \memory[9] [5] : \memory[8] [5];
  assign _214_ = read_addr[0] ? \memory[11] [5] : \memory[10] [5];
  assign _215_ = read_addr[1] ? _214_ : _213_;
  assign _216_ = read_addr[0] ? \memory[13] [5] : \memory[12] [5];
  assign _217_ = read_addr[0] ? \memory[15] [5] : \memory[14] [5];
  assign _218_ = read_addr[1] ? _217_ : _216_;
  assign _219_ = read_addr[2] ? _218_ : _215_;
  assign _005_ = read_addr[3] ? _219_ : _212_;
  assign _220_ = read_addr[0] ? \memory[1] [6] : \memory[0] [6];
  assign _221_ = read_addr[0] ? \memory[3] [6] : \memory[2] [6];
  assign _222_ = read_addr[1] ? _221_ : _220_;
  assign _223_ = read_addr[0] ? \memory[5] [6] : \memory[4] [6];
  assign _224_ = read_addr[0] ? \memory[7] [6] : \memory[6] [6];
  assign _225_ = read_addr[1] ? _224_ : _223_;
  assign _226_ = read_addr[2] ? _225_ : _222_;
  assign _227_ = read_addr[0] ? \memory[9] [6] : \memory[8] [6];
  assign _228_ = read_addr[0] ? \memory[11] [6] : \memory[10] [6];
  assign _229_ = read_addr[1] ? _228_ : _227_;
  assign _230_ = read_addr[0] ? \memory[13] [6] : \memory[12] [6];
  assign _231_ = read_addr[0] ? \memory[15] [6] : \memory[14] [6];
  assign _232_ = read_addr[1] ? _231_ : _230_;
  assign _233_ = read_addr[2] ? _232_ : _229_;
  assign _006_ = read_addr[3] ? _233_ : _226_;
  assign _234_ = read_addr[0] ? \memory[1] [7] : \memory[0] [7];
  assign _235_ = read_addr[0] ? \memory[3] [7] : \memory[2] [7];
  assign _236_ = read_addr[1] ? _235_ : _234_;
  assign _237_ = read_addr[0] ? \memory[5] [7] : \memory[4] [7];
  assign _238_ = read_addr[0] ? \memory[7] [7] : \memory[6] [7];
  assign _239_ = read_addr[1] ? _238_ : _237_;
  assign _240_ = read_addr[2] ? _239_ : _236_;
  assign _241_ = read_addr[0] ? \memory[9] [7] : \memory[8] [7];
  assign _242_ = read_addr[0] ? \memory[11] [7] : \memory[10] [7];
  assign _243_ = read_addr[1] ? _242_ : _241_;
  assign _244_ = read_addr[0] ? \memory[13] [7] : \memory[12] [7];
  assign _245_ = read_addr[0] ? \memory[15] [7] : \memory[14] [7];
  assign _246_ = read_addr[1] ? _245_ : _244_;
  assign _247_ = read_addr[2] ? _246_ : _243_;
  assign _007_ = read_addr[3] ? _247_ : _240_;
  assign _248_ = ~write_en;
  assign _249_ = write_addr[1] | write_addr[0];
  assign _250_ = write_addr[3] | write_addr[2];
  assign _251_ = _250_ | _249_;
  assign _252_ = _251_ | _248_;
  assign _008_ = _252_ ? \memory[0] [0] : write_data[0];
  assign _009_ = _252_ ? \memory[0] [1] : write_data[1];
  assign _010_ = _252_ ? \memory[0] [2] : write_data[2];
  assign _011_ = _252_ ? \memory[0] [3] : write_data[3];
  assign _012_ = _252_ ? \memory[0] [4] : write_data[4];
  assign _013_ = _252_ ? \memory[0] [5] : write_data[5];
  assign _014_ = _252_ ? \memory[0] [6] : write_data[6];
  assign _015_ = _252_ ? \memory[0] [7] : write_data[7];
  assign _253_ = write_addr[1] | ~(write_addr[0]);
  assign _254_ = _253_ | _250_;
  assign _255_ = _254_ | _248_;
  assign _064_ = _255_ ? \memory[1] [0] : write_data[0];
  assign _065_ = _255_ ? \memory[1] [1] : write_data[1];
  assign _066_ = _255_ ? \memory[1] [2] : write_data[2];
  assign _067_ = _255_ ? \memory[1] [3] : write_data[3];
  assign _068_ = _255_ ? \memory[1] [4] : write_data[4];
  assign _069_ = _255_ ? \memory[1] [5] : write_data[5];
  assign _070_ = _255_ ? \memory[1] [6] : write_data[6];
  assign _071_ = _255_ ? \memory[1] [7] : write_data[7];
  assign _256_ = write_addr[0] | ~(write_addr[1]);
  assign _257_ = _256_ | _250_;
  assign _258_ = _257_ | _248_;
  assign _072_ = _258_ ? \memory[2] [0] : write_data[0];
  assign _073_ = _258_ ? \memory[2] [1] : write_data[1];
  assign _074_ = _258_ ? \memory[2] [2] : write_data[2];
  assign _075_ = _258_ ? \memory[2] [3] : write_data[3];
  assign _076_ = _258_ ? \memory[2] [4] : write_data[4];
  assign _077_ = _258_ ? \memory[2] [5] : write_data[5];
  assign _078_ = _258_ ? \memory[2] [6] : write_data[6];
  assign _079_ = _258_ ? \memory[2] [7] : write_data[7];
  assign _259_ = ~(write_addr[1] & write_addr[0]);
  assign _260_ = _259_ | _250_;
  assign _261_ = _260_ | _248_;
  assign _080_ = _261_ ? \memory[3] [0] : write_data[0];
  assign _081_ = _261_ ? \memory[3] [1] : write_data[1];
  assign _082_ = _261_ ? \memory[3] [2] : write_data[2];
  assign _083_ = _261_ ? \memory[3] [3] : write_data[3];
  assign _084_ = _261_ ? \memory[3] [4] : write_data[4];
  assign _085_ = _261_ ? \memory[3] [5] : write_data[5];
  assign _086_ = _261_ ? \memory[3] [6] : write_data[6];
  assign _087_ = _261_ ? \memory[3] [7] : write_data[7];
  assign _262_ = write_addr[3] | ~(write_addr[2]);
  assign _263_ = _262_ | _249_;
  assign _264_ = _263_ | _248_;
  assign _088_ = _264_ ? \memory[4] [0] : write_data[0];
  assign _089_ = _264_ ? \memory[4] [1] : write_data[1];
  assign _090_ = _264_ ? \memory[4] [2] : write_data[2];
  assign _091_ = _264_ ? \memory[4] [3] : write_data[3];
  assign _092_ = _264_ ? \memory[4] [4] : write_data[4];
  assign _093_ = _264_ ? \memory[4] [5] : write_data[5];
  assign _094_ = _264_ ? \memory[4] [6] : write_data[6];
  assign _095_ = _264_ ? \memory[4] [7] : write_data[7];
  assign _265_ = _262_ | _253_;
  assign _266_ = _265_ | _248_;
  assign _096_ = _266_ ? \memory[5] [0] : write_data[0];
  assign _097_ = _266_ ? \memory[5] [1] : write_data[1];
  assign _098_ = _266_ ? \memory[5] [2] : write_data[2];
  assign _099_ = _266_ ? \memory[5] [3] : write_data[3];
  assign _100_ = _266_ ? \memory[5] [4] : write_data[4];
  assign _101_ = _266_ ? \memory[5] [5] : write_data[5];
  assign _102_ = _266_ ? \memory[5] [6] : write_data[6];
  assign _103_ = _266_ ? \memory[5] [7] : write_data[7];
  assign _267_ = _262_ | _256_;
  assign _268_ = _267_ | _248_;
  assign _104_ = _268_ ? \memory[6] [0] : write_data[0];
  assign _105_ = _268_ ? \memory[6] [1] : write_data[1];
  assign _106_ = _268_ ? \memory[6] [2] : write_data[2];
  assign _107_ = _268_ ? \memory[6] [3] : write_data[3];
  assign _108_ = _268_ ? \memory[6] [4] : write_data[4];
  assign _109_ = _268_ ? \memory[6] [5] : write_data[5];
  assign _110_ = _268_ ? \memory[6] [6] : write_data[6];
  assign _111_ = _268_ ? \memory[6] [7] : write_data[7];
  assign _269_ = _262_ | _259_;
  assign _270_ = _269_ | _248_;
  assign _112_ = _270_ ? \memory[7] [0] : write_data[0];
  assign _113_ = _270_ ? \memory[7] [1] : write_data[1];
  assign _114_ = _270_ ? \memory[7] [2] : write_data[2];
  assign _115_ = _270_ ? \memory[7] [3] : write_data[3];
  assign _116_ = _270_ ? \memory[7] [4] : write_data[4];
  assign _117_ = _270_ ? \memory[7] [5] : write_data[5];
  assign _118_ = _270_ ? \memory[7] [6] : write_data[6];
  assign _119_ = _270_ ? \memory[7] [7] : write_data[7];
  assign _271_ = write_addr[2] | ~(write_addr[3]);
  assign _272_ = _271_ | _249_;
  assign _273_ = _272_ | _248_;
  assign _120_ = _273_ ? \memory[8] [0] : write_data[0];
  assign _121_ = _273_ ? \memory[8] [1] : write_data[1];
  assign _122_ = _273_ ? \memory[8] [2] : write_data[2];
  assign _123_ = _273_ ? \memory[8] [3] : write_data[3];
  assign _124_ = _273_ ? \memory[8] [4] : write_data[4];
  assign _125_ = _273_ ? \memory[8] [5] : write_data[5];
  assign _126_ = _273_ ? \memory[8] [6] : write_data[6];
  assign _127_ = _273_ ? \memory[8] [7] : write_data[7];
  assign _274_ = _271_ | _253_;
  assign _275_ = _274_ | _248_;
  assign _128_ = _275_ ? \memory[9] [0] : write_data[0];
  assign _129_ = _275_ ? \memory[9] [1] : write_data[1];
  assign _130_ = _275_ ? \memory[9] [2] : write_data[2];
  assign _131_ = _275_ ? \memory[9] [3] : write_data[3];
  assign _132_ = _275_ ? \memory[9] [4] : write_data[4];
  assign _133_ = _275_ ? \memory[9] [5] : write_data[5];
  assign _134_ = _275_ ? \memory[9] [6] : write_data[6];
  assign _135_ = _275_ ? \memory[9] [7] : write_data[7];
  assign _276_ = _271_ | _256_;
  assign _277_ = _276_ | _248_;
  assign _016_ = _277_ ? \memory[10] [0] : write_data[0];
  assign _017_ = _277_ ? \memory[10] [1] : write_data[1];
  assign _018_ = _277_ ? \memory[10] [2] : write_data[2];
  assign _019_ = _277_ ? \memory[10] [3] : write_data[3];
  assign _020_ = _277_ ? \memory[10] [4] : write_data[4];
  assign _021_ = _277_ ? \memory[10] [5] : write_data[5];
  assign _022_ = _277_ ? \memory[10] [6] : write_data[6];
  assign _023_ = _277_ ? \memory[10] [7] : write_data[7];
  assign _278_ = _271_ | _259_;
  assign _279_ = _278_ | _248_;
  assign _024_ = _279_ ? \memory[11] [0] : write_data[0];
  assign _025_ = _279_ ? \memory[11] [1] : write_data[1];
  assign _026_ = _279_ ? \memory[11] [2] : write_data[2];
  assign _027_ = _279_ ? \memory[11] [3] : write_data[3];
  assign _028_ = _279_ ? \memory[11] [4] : write_data[4];
  assign _029_ = _279_ ? \memory[11] [5] : write_data[5];
  assign _030_ = _279_ ? \memory[11] [6] : write_data[6];
  assign _031_ = _279_ ? \memory[11] [7] : write_data[7];
  assign _280_ = ~(write_addr[3] & write_addr[2]);
  assign _281_ = _280_ | _249_;
  assign _282_ = _281_ | _248_;
  assign _032_ = _282_ ? \memory[12] [0] : write_data[0];
  assign _033_ = _282_ ? \memory[12] [1] : write_data[1];
  assign _034_ = _282_ ? \memory[12] [2] : write_data[2];
  assign _035_ = _282_ ? \memory[12] [3] : write_data[3];
  assign _036_ = _282_ ? \memory[12] [4] : write_data[4];
  assign _037_ = _282_ ? \memory[12] [5] : write_data[5];
  assign _038_ = _282_ ? \memory[12] [6] : write_data[6];
  assign _039_ = _282_ ? \memory[12] [7] : write_data[7];
  assign _283_ = _280_ | _253_;
  assign _284_ = _283_ | _248_;
  assign _040_ = _284_ ? \memory[13] [0] : write_data[0];
  assign _041_ = _284_ ? \memory[13] [1] : write_data[1];
  assign _042_ = _284_ ? \memory[13] [2] : write_data[2];
  assign _043_ = _284_ ? \memory[13] [3] : write_data[3];
  assign _044_ = _284_ ? \memory[13] [4] : write_data[4];
  assign _045_ = _284_ ? \memory[13] [5] : write_data[5];
  assign _046_ = _284_ ? \memory[13] [6] : write_data[6];
  assign _047_ = _284_ ? \memory[13] [7] : write_data[7];
  assign _285_ = _280_ | _256_;
  assign _286_ = _285_ | _248_;
  assign _048_ = _286_ ? \memory[14] [0] : write_data[0];
  assign _049_ = _286_ ? \memory[14] [1] : write_data[1];
  assign _050_ = _286_ ? \memory[14] [2] : write_data[2];
  assign _051_ = _286_ ? \memory[14] [3] : write_data[3];
  assign _052_ = _286_ ? \memory[14] [4] : write_data[4];
  assign _053_ = _286_ ? \memory[14] [5] : write_data[5];
  assign _054_ = _286_ ? \memory[14] [6] : write_data[6];
  assign _055_ = _286_ ? \memory[14] [7] : write_data[7];
  assign _287_ = _280_ | _259_;
  assign _288_ = _287_ | _248_;
  assign _056_ = _288_ ? \memory[15] [0] : write_data[0];
  assign _057_ = _288_ ? \memory[15] [1] : write_data[1];
  assign _058_ = _288_ ? \memory[15] [2] : write_data[2];
  assign _059_ = _288_ ? \memory[15] [3] : write_data[3];
  assign _060_ = _288_ ? \memory[15] [4] : write_data[4];
  assign _061_ = _288_ ? \memory[15] [5] : write_data[5];
  assign _062_ = _288_ ? \memory[15] [6] : write_data[6];
  assign _063_ = _288_ ? \memory[15] [7] : write_data[7];
  assign _136_ = read_addr[0] ? \memory[1] [0] : \memory[0] [0];
  assign _137_ = read_addr[0] ? \memory[3] [0] : \memory[2] [0];
  assign _138_ = read_addr[1] ? _137_ : _136_;
  assign _139_ = read_addr[0] ? \memory[5] [0] : \memory[4] [0];
  assign _140_ = read_addr[0] ? \memory[7] [0] : \memory[6] [0];
  assign _141_ = read_addr[1] ? _140_ : _139_;
  assign _142_ = read_addr[2] ? _141_ : _138_;
  assign _143_ = read_addr[0] ? \memory[9] [0] : \memory[8] [0];
  assign _144_ = read_addr[0] ? \memory[11] [0] : \memory[10] [0];
  assign _145_ = read_addr[1] ? _144_ : _143_;
  assign _146_ = read_addr[0] ? \memory[13] [0] : \memory[12] [0];
  assign _147_ = read_addr[0] ? \memory[15] [0] : \memory[14] [0];
  assign _148_ = read_addr[1] ? _147_ : _146_;
  assign _149_ = read_addr[2] ? _148_ : _145_;
  assign _000_ = read_addr[3] ? _149_ : _142_;
  assign _150_ = read_addr[0] ? \memory[1] [1] : \memory[0] [1];
  assign _151_ = read_addr[0] ? \memory[3] [1] : \memory[2] [1];
  assign _152_ = read_addr[1] ? _151_ : _150_;
  assign _153_ = read_addr[0] ? \memory[5] [1] : \memory[4] [1];
  assign _154_ = read_addr[0] ? \memory[7] [1] : \memory[6] [1];
  assign _155_ = read_addr[1] ? _154_ : _153_;
  always @(posedge wr_clk)
      \memory[8] [0] <= _120_;
  always @(posedge wr_clk)
      \memory[8] [1] <= _121_;
  always @(posedge wr_clk)
      \memory[8] [2] <= _122_;
  always @(posedge wr_clk)
      \memory[8] [3] <= _123_;
  always @(posedge wr_clk)
      \memory[8] [4] <= _124_;
  always @(posedge wr_clk)
      \memory[8] [5] <= _125_;
  always @(posedge wr_clk)
      \memory[8] [6] <= _126_;
  always @(posedge wr_clk)
      \memory[8] [7] <= _127_;
  always @(posedge wr_clk)
      \memory[3] [0] <= _080_;
  always @(posedge wr_clk)
      \memory[3] [1] <= _081_;
  always @(posedge wr_clk)
      \memory[3] [2] <= _082_;
  always @(posedge wr_clk)
      \memory[3] [3] <= _083_;
  always @(posedge wr_clk)
      \memory[3] [4] <= _084_;
  always @(posedge wr_clk)
      \memory[3] [5] <= _085_;
  always @(posedge wr_clk)
      \memory[3] [6] <= _086_;
  always @(posedge wr_clk)
      \memory[3] [7] <= _087_;
  always @(posedge wr_clk)
      \memory[0] [0] <= _008_;
  always @(posedge wr_clk)
      \memory[0] [1] <= _009_;
  always @(posedge wr_clk)
      \memory[0] [2] <= _010_;
  always @(posedge wr_clk)
      \memory[0] [3] <= _011_;
  always @(posedge wr_clk)
      \memory[0] [4] <= _012_;
  always @(posedge wr_clk)
      \memory[0] [5] <= _013_;
  always @(posedge wr_clk)
      \memory[0] [6] <= _014_;
  always @(posedge wr_clk)
      \memory[0] [7] <= _015_;
  always @(posedge rd_clk)
      read_data[0] <= _000_;
  always @(posedge rd_clk)
      read_data[1] <= _001_;
  always @(posedge rd_clk)
      read_data[2] <= _002_;
  always @(posedge rd_clk)
      read_data[3] <= _003_;
  always @(posedge rd_clk)
      read_data[4] <= _004_;
  always @(posedge rd_clk)
      read_data[5] <= _005_;
  always @(posedge rd_clk)
      read_data[6] <= _006_;
  always @(posedge rd_clk)
      read_data[7] <= _007_;
  always @(posedge wr_clk)
      \memory[14] [0] <= _048_;
  always @(posedge wr_clk)
      \memory[14] [1] <= _049_;
  always @(posedge wr_clk)
      \memory[14] [2] <= _050_;
  always @(posedge wr_clk)
      \memory[14] [3] <= _051_;
  always @(posedge wr_clk)
      \memory[14] [4] <= _052_;
  always @(posedge wr_clk)
      \memory[14] [5] <= _053_;
  always @(posedge wr_clk)
      \memory[14] [6] <= _054_;
  always @(posedge wr_clk)
      \memory[14] [7] <= _055_;
  always @(posedge wr_clk)
      \memory[15] [0] <= _056_;
  always @(posedge wr_clk)
      \memory[15] [1] <= _057_;
  always @(posedge wr_clk)
      \memory[15] [2] <= _058_;
  always @(posedge wr_clk)
      \memory[15] [3] <= _059_;
  always @(posedge wr_clk)
      \memory[15] [4] <= _060_;
  always @(posedge wr_clk)
      \memory[15] [5] <= _061_;
  always @(posedge wr_clk)
      \memory[15] [6] <= _062_;
  always @(posedge wr_clk)
      \memory[15] [7] <= _063_;
  always @(posedge wr_clk)
      \memory[5] [0] <= _096_;
  always @(posedge wr_clk)
      \memory[5] [1] <= _097_;
  always @(posedge wr_clk)
      \memory[5] [2] <= _098_;
  always @(posedge wr_clk)
      \memory[5] [3] <= _099_;
  always @(posedge wr_clk)
      \memory[5] [4] <= _100_;
  always @(posedge wr_clk)
      \memory[5] [5] <= _101_;
  always @(posedge wr_clk)
      \memory[5] [6] <= _102_;
  always @(posedge wr_clk)
      \memory[5] [7] <= _103_;
  always @(posedge wr_clk)
      \memory[9] [0] <= _128_;
  always @(posedge wr_clk)
      \memory[9] [1] <= _129_;
  always @(posedge wr_clk)
      \memory[9] [2] <= _130_;
  always @(posedge wr_clk)
      \memory[9] [3] <= _131_;
  always @(posedge wr_clk)
      \memory[9] [4] <= _132_;
  always @(posedge wr_clk)
      \memory[9] [5] <= _133_;
  always @(posedge wr_clk)
      \memory[9] [6] <= _134_;
  always @(posedge wr_clk)
      \memory[9] [7] <= _135_;
  always @(posedge wr_clk)
      \memory[10] [0] <= _016_;
  always @(posedge wr_clk)
      \memory[10] [1] <= _017_;
  always @(posedge wr_clk)
      \memory[10] [2] <= _018_;
  always @(posedge wr_clk)
      \memory[10] [3] <= _019_;
  always @(posedge wr_clk)
      \memory[10] [4] <= _020_;
  always @(posedge wr_clk)
      \memory[10] [5] <= _021_;
  always @(posedge wr_clk)
      \memory[10] [6] <= _022_;
  always @(posedge wr_clk)
      \memory[10] [7] <= _023_;
  always @(posedge wr_clk)
      \memory[4] [0] <= _088_;
  always @(posedge wr_clk)
      \memory[4] [1] <= _089_;
  always @(posedge wr_clk)
      \memory[4] [2] <= _090_;
  always @(posedge wr_clk)
      \memory[4] [3] <= _091_;
  always @(posedge wr_clk)
      \memory[4] [4] <= _092_;
  always @(posedge wr_clk)
      \memory[4] [5] <= _093_;
  always @(posedge wr_clk)
      \memory[4] [6] <= _094_;
  always @(posedge wr_clk)
      \memory[4] [7] <= _095_;
  always @(posedge wr_clk)
      \memory[2] [0] <= _072_;
  always @(posedge wr_clk)
      \memory[2] [1] <= _073_;
  always @(posedge wr_clk)
      \memory[2] [2] <= _074_;
  always @(posedge wr_clk)
      \memory[2] [3] <= _075_;
  always @(posedge wr_clk)
      \memory[2] [4] <= _076_;
  always @(posedge wr_clk)
      \memory[2] [5] <= _077_;
  always @(posedge wr_clk)
      \memory[2] [6] <= _078_;
  always @(posedge wr_clk)
      \memory[2] [7] <= _079_;
  always @(posedge wr_clk)
      \memory[6] [0] <= _104_;
  always @(posedge wr_clk)
      \memory[6] [1] <= _105_;
  always @(posedge wr_clk)
      \memory[6] [2] <= _106_;
  always @(posedge wr_clk)
      \memory[6] [3] <= _107_;
  always @(posedge wr_clk)
      \memory[6] [4] <= _108_;
  always @(posedge wr_clk)
      \memory[6] [5] <= _109_;
  always @(posedge wr_clk)
      \memory[6] [6] <= _110_;
  always @(posedge wr_clk)
      \memory[6] [7] <= _111_;
  always @(posedge wr_clk)
      \memory[12] [0] <= _032_;
  always @(posedge wr_clk)
      \memory[12] [1] <= _033_;
  always @(posedge wr_clk)
      \memory[12] [2] <= _034_;
  always @(posedge wr_clk)
      \memory[12] [3] <= _035_;
  always @(posedge wr_clk)
      \memory[12] [4] <= _036_;
  always @(posedge wr_clk)
      \memory[12] [5] <= _037_;
  always @(posedge wr_clk)
      \memory[12] [6] <= _038_;
  always @(posedge wr_clk)
      \memory[12] [7] <= _039_;
  always @(posedge wr_clk)
      \memory[1] [0] <= _064_;
  always @(posedge wr_clk)
      \memory[1] [1] <= _065_;
  always @(posedge wr_clk)
      \memory[1] [2] <= _066_;
  always @(posedge wr_clk)
      \memory[1] [3] <= _067_;
  always @(posedge wr_clk)
      \memory[1] [4] <= _068_;
  always @(posedge wr_clk)
      \memory[1] [5] <= _069_;
  always @(posedge wr_clk)
      \memory[1] [6] <= _070_;
  always @(posedge wr_clk)
      \memory[1] [7] <= _071_;
  always @(posedge wr_clk)
      \memory[11] [0] <= _024_;
  always @(posedge wr_clk)
      \memory[11] [1] <= _025_;
  always @(posedge wr_clk)
      \memory[11] [2] <= _026_;
  always @(posedge wr_clk)
      \memory[11] [3] <= _027_;
  always @(posedge wr_clk)
      \memory[11] [4] <= _028_;
  always @(posedge wr_clk)
      \memory[11] [5] <= _029_;
  always @(posedge wr_clk)
      \memory[11] [6] <= _030_;
  always @(posedge wr_clk)
      \memory[11] [7] <= _031_;
  always @(posedge wr_clk)
      \memory[13] [0] <= _040_;
  always @(posedge wr_clk)
      \memory[13] [1] <= _041_;
  always @(posedge wr_clk)
      \memory[13] [2] <= _042_;
  always @(posedge wr_clk)
      \memory[13] [3] <= _043_;
  always @(posedge wr_clk)
      \memory[13] [4] <= _044_;
  always @(posedge wr_clk)
      \memory[13] [5] <= _045_;
  always @(posedge wr_clk)
      \memory[13] [6] <= _046_;
  always @(posedge wr_clk)
      \memory[13] [7] <= _047_;
  always @(posedge wr_clk)
      \memory[7] [0] <= _112_;
  always @(posedge wr_clk)
      \memory[7] [1] <= _113_;
  always @(posedge wr_clk)
      \memory[7] [2] <= _114_;
  always @(posedge wr_clk)
      \memory[7] [3] <= _115_;
  always @(posedge wr_clk)
      \memory[7] [4] <= _116_;
  always @(posedge wr_clk)
      \memory[7] [5] <= _117_;
  always @(posedge wr_clk)
      \memory[7] [6] <= _118_;
  always @(posedge wr_clk)
      \memory[7] [7] <= _119_;
endmodule

(* dynports =  1  *)
(* src = "async_fifo_status.v:1" *)
module \$paramod\async_fifo_status\DEPTH=16 (wr_clk, rd_clk, reset, gray_write_ptr, gray_read_ptr, full, empty);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  (* src = "async_fifo_status.v:8" *)
  output empty;
  (* src = "async_fifo_status.v:7" *)
  output full;
  (* src = "async_fifo_status.v:6" *)
  input [4:0] gray_read_ptr;
  (* src = "async_fifo_status.v:5" *)
  input [4:0] gray_write_ptr;
  (* src = "async_fifo_status.v:3" *)
  input rd_clk;
  (* src = "async_fifo_status.v:4" *)
  input reset;
  (* src = "async_fifo_status.v:11" *)
  reg [4:0] synched_gray_read_ptr;
  (* src = "async_fifo_status.v:2" *)
  input wr_clk;
  assign _00_ = ~(synched_gray_read_ptr[0] ^ gray_write_ptr[0]);
  assign _01_ = synched_gray_read_ptr[1] ^ gray_write_ptr[1];
  assign _02_ = _00_ & ~(_01_);
  assign _03_ = synched_gray_read_ptr[2] ^ gray_write_ptr[2];
  assign _04_ = synched_gray_read_ptr[3] ^ gray_write_ptr[3];
  assign _05_ = _04_ | _03_;
  assign _06_ = _02_ & ~(_05_);
  assign _07_ = ~(synched_gray_read_ptr[4] ^ gray_write_ptr[4]);
  assign empty = _07_ & _06_;
  assign full = _06_ & ~(_07_);
  (* src = "async_fifo_status.v:23" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      synched_gray_read_ptr[0] <= 0;
    else
      synched_gray_read_ptr[0] <= gray_read_ptr[0];
  (* src = "async_fifo_status.v:23" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      synched_gray_read_ptr[1] <= 0;
    else
      synched_gray_read_ptr[1] <= gray_read_ptr[1];
  (* src = "async_fifo_status.v:23" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      synched_gray_read_ptr[2] <= 0;
    else
      synched_gray_read_ptr[2] <= gray_read_ptr[2];
  (* src = "async_fifo_status.v:23" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      synched_gray_read_ptr[3] <= 0;
    else
      synched_gray_read_ptr[3] <= gray_read_ptr[3];
  (* src = "async_fifo_status.v:23" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      synched_gray_read_ptr[4] <= 0;
    else
      synched_gray_read_ptr[4] <= gray_read_ptr[4];
endmodule

(* dynports =  1  *)
(* src = "async_read_pointer.v:1" *)
module \$paramod\async_read_pointer\DEPTH=16 (rd_clk, reset, read_en, read_addr, gray_read_ptr);
  (* src = "async_read_pointer.v:10" *)
  wire [4:0] _00_;
  (* src = "async_read_pointer.v:10" *)
  wire [4:0] _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  (* src = "async_read_pointer.v:8" *)
  reg [4:0] binary_read_ptr;
  (* src = "async_read_pointer.v:6" *)
  output [4:0] gray_read_ptr;
  reg [4:0] gray_read_ptr;
  (* src = "async_read_pointer.v:2" *)
  input rd_clk;
  (* src = "async_read_pointer.v:5" *)
  output [3:0] read_addr;
  (* src = "async_read_pointer.v:4" *)
  input read_en;
  (* src = "async_read_pointer.v:3" *)
  input reset;
  assign _00_[0] = read_en ^ binary_read_ptr[0];
  assign _02_ = binary_read_ptr[1] ^ binary_read_ptr[0];
  assign _00_[1] = read_en ? _02_ : binary_read_ptr[1];
  assign _03_ = binary_read_ptr[1] & binary_read_ptr[0];
  assign _04_ = _03_ ^ binary_read_ptr[2];
  assign _00_[2] = read_en ? _04_ : binary_read_ptr[2];
  assign _05_ = _03_ & binary_read_ptr[2];
  assign _06_ = _05_ ^ binary_read_ptr[3];
  assign _00_[3] = read_en ? _06_ : binary_read_ptr[3];
  assign _07_ = ~(binary_read_ptr[3] & binary_read_ptr[2]);
  assign _08_ = _03_ & ~(_07_);
  assign _09_ = _08_ ^ binary_read_ptr[4];
  assign _00_[4] = read_en ? _09_ : binary_read_ptr[4];
  assign _01_[0] = read_en ? _02_ : gray_read_ptr[0];
  assign _10_ = binary_read_ptr[2] ^ binary_read_ptr[1];
  assign _01_[1] = read_en ? _10_ : gray_read_ptr[1];
  assign _11_ = binary_read_ptr[3] ^ binary_read_ptr[2];
  assign _01_[2] = read_en ? _11_ : gray_read_ptr[2];
  assign _12_ = binary_read_ptr[4] ^ binary_read_ptr[3];
  assign _01_[3] = read_en ? _12_ : gray_read_ptr[3];
  assign _01_[4] = read_en ? binary_read_ptr[4] : gray_read_ptr[4];
  (* src = "async_read_pointer.v:10" *)
  always @(posedge rd_clk or posedge reset)
    if (reset)
      binary_read_ptr[0] <= 0;
    else
      binary_read_ptr[0] <= _00_[0];
  (* src = "async_read_pointer.v:10" *)
  always @(posedge rd_clk or posedge reset)
    if (reset)
      binary_read_ptr[1] <= 0;
    else
      binary_read_ptr[1] <= _00_[1];
  (* src = "async_read_pointer.v:10" *)
  always @(posedge rd_clk or posedge reset)
    if (reset)
      binary_read_ptr[2] <= 0;
    else
      binary_read_ptr[2] <= _00_[2];
  (* src = "async_read_pointer.v:10" *)
  always @(posedge rd_clk or posedge reset)
    if (reset)
      binary_read_ptr[3] <= 0;
    else
      binary_read_ptr[3] <= _00_[3];
  (* src = "async_read_pointer.v:10" *)
  always @(posedge rd_clk or posedge reset)
    if (reset)
      binary_read_ptr[4] <= 0;
    else
      binary_read_ptr[4] <= _00_[4];
  (* src = "async_read_pointer.v:10" *)
  always @(posedge rd_clk or posedge reset)
    if (reset)
      gray_read_ptr[0] <= 0;
    else
      gray_read_ptr[0] <= _01_[0];
  (* src = "async_read_pointer.v:10" *)
  always @(posedge rd_clk or posedge reset)
    if (reset)
      gray_read_ptr[1] <= 0;
    else
      gray_read_ptr[1] <= _01_[1];
  (* src = "async_read_pointer.v:10" *)
  always @(posedge rd_clk or posedge reset)
    if (reset)
      gray_read_ptr[2] <= 0;
    else
      gray_read_ptr[2] <= _01_[2];
  (* src = "async_read_pointer.v:10" *)
  always @(posedge rd_clk or posedge reset)
    if (reset)
      gray_read_ptr[3] <= 0;
    else
      gray_read_ptr[3] <= _01_[3];
  (* src = "async_read_pointer.v:10" *)
  always @(posedge rd_clk or posedge reset)
    if (reset)
      gray_read_ptr[4] <= 0;
    else
      gray_read_ptr[4] <= _01_[4];
  assign read_addr = binary_read_ptr[3:0];
endmodule

(* dynports =  1  *)
(* src = "async_write_pointer.v:1" *)
module \$paramod\async_write_pointer\DEPTH=16 (wr_clk, reset, write_en, write_addr, gray_write_ptr);
  (* src = "async_write_pointer.v:10" *)
  wire [4:0] _00_;
  (* src = "async_write_pointer.v:10" *)
  wire [4:0] _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  (* src = "async_write_pointer.v:8" *)
  reg [4:0] binary_write_ptr;
  (* src = "async_write_pointer.v:6" *)
  output [4:0] gray_write_ptr;
  reg [4:0] gray_write_ptr;
  (* src = "async_write_pointer.v:3" *)
  input reset;
  (* src = "async_write_pointer.v:2" *)
  input wr_clk;
  (* src = "async_write_pointer.v:5" *)
  output [3:0] write_addr;
  (* src = "async_write_pointer.v:4" *)
  input write_en;
  assign _00_[0] = write_en ^ binary_write_ptr[0];
  assign _02_ = binary_write_ptr[1] ^ binary_write_ptr[0];
  assign _00_[1] = write_en ? _02_ : binary_write_ptr[1];
  assign _03_ = binary_write_ptr[1] & binary_write_ptr[0];
  assign _04_ = _03_ ^ binary_write_ptr[2];
  assign _00_[2] = write_en ? _04_ : binary_write_ptr[2];
  assign _05_ = _03_ & binary_write_ptr[2];
  assign _06_ = _05_ ^ binary_write_ptr[3];
  assign _00_[3] = write_en ? _06_ : binary_write_ptr[3];
  assign _07_ = ~(binary_write_ptr[3] & binary_write_ptr[2]);
  assign _08_ = _03_ & ~(_07_);
  assign _09_ = _08_ ^ binary_write_ptr[4];
  assign _00_[4] = write_en ? _09_ : binary_write_ptr[4];
  assign _01_[0] = write_en ? _02_ : gray_write_ptr[0];
  assign _10_ = binary_write_ptr[2] ^ binary_write_ptr[1];
  assign _01_[1] = write_en ? _10_ : gray_write_ptr[1];
  assign _11_ = binary_write_ptr[3] ^ binary_write_ptr[2];
  assign _01_[2] = write_en ? _11_ : gray_write_ptr[2];
  assign _12_ = binary_write_ptr[4] ^ binary_write_ptr[3];
  assign _01_[3] = write_en ? _12_ : gray_write_ptr[3];
  assign _01_[4] = write_en ? binary_write_ptr[4] : gray_write_ptr[4];
  (* src = "async_write_pointer.v:10" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      binary_write_ptr[0] <= 0;
    else
      binary_write_ptr[0] <= _00_[0];
  (* src = "async_write_pointer.v:10" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      binary_write_ptr[1] <= 0;
    else
      binary_write_ptr[1] <= _00_[1];
  (* src = "async_write_pointer.v:10" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      binary_write_ptr[2] <= 0;
    else
      binary_write_ptr[2] <= _00_[2];
  (* src = "async_write_pointer.v:10" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      binary_write_ptr[3] <= 0;
    else
      binary_write_ptr[3] <= _00_[3];
  (* src = "async_write_pointer.v:10" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      binary_write_ptr[4] <= 0;
    else
      binary_write_ptr[4] <= _00_[4];
  (* src = "async_write_pointer.v:10" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      gray_write_ptr[0] <= 0;
    else
      gray_write_ptr[0] <= _01_[0];
  (* src = "async_write_pointer.v:10" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      gray_write_ptr[1] <= 0;
    else
      gray_write_ptr[1] <= _01_[1];
  (* src = "async_write_pointer.v:10" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      gray_write_ptr[2] <= 0;
    else
      gray_write_ptr[2] <= _01_[2];
  (* src = "async_write_pointer.v:10" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      gray_write_ptr[3] <= 0;
    else
      gray_write_ptr[3] <= _01_[3];
  (* src = "async_write_pointer.v:10" *)
  always @(posedge wr_clk or posedge reset)
    if (reset)
      gray_write_ptr[4] <= 0;
    else
      gray_write_ptr[4] <= _01_[4];
  assign write_addr = binary_write_ptr[3:0];
endmodule

(* dynports =  1  *)
(* top =  1  *)
(* src = "concurrent_fifo_async_top.v:1" *)
module concurrent_fifo_async_top(wr_clk, rd_clk, reset, write_en, read_en, write_data, read_data, full, empty);
  (* src = "concurrent_fifo_async_top.v:10" *)
  output empty;
  (* src = "concurrent_fifo_async_top.v:9" *)
  output full;
  (* src = "concurrent_fifo_async_top.v:15" *)
  wire [4:0] gray_read_ptr;
  (* src = "concurrent_fifo_async_top.v:15" *)
  wire [4:0] gray_write_ptr;
  (* src = "concurrent_fifo_async_top.v:3" *)
  input rd_clk;
  (* src = "concurrent_fifo_async_top.v:14" *)
  wire [3:0] read_addr;
  (* src = "concurrent_fifo_async_top.v:8" *)
  output [7:0] read_data;
  (* src = "concurrent_fifo_async_top.v:6" *)
  input read_en;
  (* src = "concurrent_fifo_async_top.v:4" *)
  input reset;
  (* src = "concurrent_fifo_async_top.v:2" *)
  input wr_clk;
  (* src = "concurrent_fifo_async_top.v:14" *)
  wire [3:0] write_addr;
  (* src = "concurrent_fifo_async_top.v:7" *)
  input [7:0] write_data;
  (* src = "concurrent_fifo_async_top.v:5" *)
  input write_en;
  (* src = "concurrent_fifo_async_top.v:17" *)
  \$paramod\async_fifo_memory\DATA_WIDTH=8\DEPTH=16  fifo_mem (
    .rd_clk(rd_clk),
    .read_addr(read_addr),
    .read_data(read_data),
    .wr_clk(wr_clk),
    .write_addr(write_addr),
    .write_data(write_data),
    .write_en(write_en)
  );
  (* src = "concurrent_fifo_async_top.v:35" *)
  \$paramod\async_read_pointer\DEPTH=16  rd_ptr (
    .gray_read_ptr(gray_read_ptr),
    .rd_clk(rd_clk),
    .read_addr(read_addr),
    .read_en(read_en),
    .reset(reset)
  );
  (* src = "concurrent_fifo_async_top.v:43" *)
  \$paramod\async_fifo_status\DEPTH=16  status (
    .empty(empty),
    .full(full),
    .gray_read_ptr(gray_read_ptr),
    .gray_write_ptr(gray_write_ptr),
    .rd_clk(rd_clk),
    .reset(reset),
    .wr_clk(wr_clk)
  );
  (* src = "concurrent_fifo_async_top.v:27" *)
  \$paramod\async_write_pointer\DEPTH=16  wr_ptr (
    .gray_write_ptr(gray_write_ptr),
    .reset(reset),
    .wr_clk(wr_clk),
    .write_addr(write_addr),
    .write_en(write_en)
  );
endmodule
